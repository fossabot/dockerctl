// Code generated by go-swagger; DO NOT EDIT.

package node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/go-swagger/dockerctl/models"
)

// NodeInspectReader is a Reader for the NodeInspect structure.
type NodeInspectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodeInspectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNodeInspectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewNodeInspectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNodeInspectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewNodeInspectServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNodeInspectOK creates a NodeInspectOK with default headers values
func NewNodeInspectOK() *NodeInspectOK {
	return &NodeInspectOK{}
}

/* NodeInspectOK describes a response with status code 200, with default header values.

no error
*/
type NodeInspectOK struct {
	Payload *models.Node
}

// IsSuccess returns true when this node inspect o k response has a 2xx status code
func (o *NodeInspectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this node inspect o k response has a 3xx status code
func (o *NodeInspectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this node inspect o k response has a 4xx status code
func (o *NodeInspectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this node inspect o k response has a 5xx status code
func (o *NodeInspectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this node inspect o k response a status code equal to that given
func (o *NodeInspectOK) IsCode(code int) bool {
	return code == 200
}

func (o *NodeInspectOK) Error() string {
	return fmt.Sprintf("[GET /nodes/{id}][%d] nodeInspectOK  %+v", 200, o.Payload)
}

func (o *NodeInspectOK) String() string {
	return fmt.Sprintf("[GET /nodes/{id}][%d] nodeInspectOK  %+v", 200, o.Payload)
}

func (o *NodeInspectOK) GetPayload() *models.Node {
	return o.Payload
}

func (o *NodeInspectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Node)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeInspectNotFound creates a NodeInspectNotFound with default headers values
func NewNodeInspectNotFound() *NodeInspectNotFound {
	return &NodeInspectNotFound{}
}

/* NodeInspectNotFound describes a response with status code 404, with default header values.

no such node
*/
type NodeInspectNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this node inspect not found response has a 2xx status code
func (o *NodeInspectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this node inspect not found response has a 3xx status code
func (o *NodeInspectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this node inspect not found response has a 4xx status code
func (o *NodeInspectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this node inspect not found response has a 5xx status code
func (o *NodeInspectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this node inspect not found response a status code equal to that given
func (o *NodeInspectNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *NodeInspectNotFound) Error() string {
	return fmt.Sprintf("[GET /nodes/{id}][%d] nodeInspectNotFound  %+v", 404, o.Payload)
}

func (o *NodeInspectNotFound) String() string {
	return fmt.Sprintf("[GET /nodes/{id}][%d] nodeInspectNotFound  %+v", 404, o.Payload)
}

func (o *NodeInspectNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeInspectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeInspectInternalServerError creates a NodeInspectInternalServerError with default headers values
func NewNodeInspectInternalServerError() *NodeInspectInternalServerError {
	return &NodeInspectInternalServerError{}
}

/* NodeInspectInternalServerError describes a response with status code 500, with default header values.

server error
*/
type NodeInspectInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this node inspect internal server error response has a 2xx status code
func (o *NodeInspectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this node inspect internal server error response has a 3xx status code
func (o *NodeInspectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this node inspect internal server error response has a 4xx status code
func (o *NodeInspectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this node inspect internal server error response has a 5xx status code
func (o *NodeInspectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this node inspect internal server error response a status code equal to that given
func (o *NodeInspectInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *NodeInspectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /nodes/{id}][%d] nodeInspectInternalServerError  %+v", 500, o.Payload)
}

func (o *NodeInspectInternalServerError) String() string {
	return fmt.Sprintf("[GET /nodes/{id}][%d] nodeInspectInternalServerError  %+v", 500, o.Payload)
}

func (o *NodeInspectInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeInspectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeInspectServiceUnavailable creates a NodeInspectServiceUnavailable with default headers values
func NewNodeInspectServiceUnavailable() *NodeInspectServiceUnavailable {
	return &NodeInspectServiceUnavailable{}
}

/* NodeInspectServiceUnavailable describes a response with status code 503, with default header values.

node is not part of a swarm
*/
type NodeInspectServiceUnavailable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this node inspect service unavailable response has a 2xx status code
func (o *NodeInspectServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this node inspect service unavailable response has a 3xx status code
func (o *NodeInspectServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this node inspect service unavailable response has a 4xx status code
func (o *NodeInspectServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this node inspect service unavailable response has a 5xx status code
func (o *NodeInspectServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this node inspect service unavailable response a status code equal to that given
func (o *NodeInspectServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *NodeInspectServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /nodes/{id}][%d] nodeInspectServiceUnavailable  %+v", 503, o.Payload)
}

func (o *NodeInspectServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /nodes/{id}][%d] nodeInspectServiceUnavailable  %+v", 503, o.Payload)
}

func (o *NodeInspectServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeInspectServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
