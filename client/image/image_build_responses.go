// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/go-swagger/dockerctl/models"
)

// ImageBuildReader is a Reader for the ImageBuild structure.
type ImageBuildReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageBuildReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageBuildOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImageBuildBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImageBuildInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImageBuildOK creates a ImageBuildOK with default headers values
func NewImageBuildOK() *ImageBuildOK {
	return &ImageBuildOK{}
}

/* ImageBuildOK describes a response with status code 200, with default header values.

no error
*/
type ImageBuildOK struct {
}

// IsSuccess returns true when this image build o k response has a 2xx status code
func (o *ImageBuildOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this image build o k response has a 3xx status code
func (o *ImageBuildOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this image build o k response has a 4xx status code
func (o *ImageBuildOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this image build o k response has a 5xx status code
func (o *ImageBuildOK) IsServerError() bool {
	return false
}

// IsCode returns true when this image build o k response a status code equal to that given
func (o *ImageBuildOK) IsCode(code int) bool {
	return code == 200
}

func (o *ImageBuildOK) Error() string {
	return fmt.Sprintf("[POST /build][%d] imageBuildOK ", 200)
}

func (o *ImageBuildOK) String() string {
	return fmt.Sprintf("[POST /build][%d] imageBuildOK ", 200)
}

func (o *ImageBuildOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImageBuildBadRequest creates a ImageBuildBadRequest with default headers values
func NewImageBuildBadRequest() *ImageBuildBadRequest {
	return &ImageBuildBadRequest{}
}

/* ImageBuildBadRequest describes a response with status code 400, with default header values.

Bad parameter
*/
type ImageBuildBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this image build bad request response has a 2xx status code
func (o *ImageBuildBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this image build bad request response has a 3xx status code
func (o *ImageBuildBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this image build bad request response has a 4xx status code
func (o *ImageBuildBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this image build bad request response has a 5xx status code
func (o *ImageBuildBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this image build bad request response a status code equal to that given
func (o *ImageBuildBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ImageBuildBadRequest) Error() string {
	return fmt.Sprintf("[POST /build][%d] imageBuildBadRequest  %+v", 400, o.Payload)
}

func (o *ImageBuildBadRequest) String() string {
	return fmt.Sprintf("[POST /build][%d] imageBuildBadRequest  %+v", 400, o.Payload)
}

func (o *ImageBuildBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ImageBuildBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageBuildInternalServerError creates a ImageBuildInternalServerError with default headers values
func NewImageBuildInternalServerError() *ImageBuildInternalServerError {
	return &ImageBuildInternalServerError{}
}

/* ImageBuildInternalServerError describes a response with status code 500, with default header values.

server error
*/
type ImageBuildInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this image build internal server error response has a 2xx status code
func (o *ImageBuildInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this image build internal server error response has a 3xx status code
func (o *ImageBuildInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this image build internal server error response has a 4xx status code
func (o *ImageBuildInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this image build internal server error response has a 5xx status code
func (o *ImageBuildInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this image build internal server error response a status code equal to that given
func (o *ImageBuildInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ImageBuildInternalServerError) Error() string {
	return fmt.Sprintf("[POST /build][%d] imageBuildInternalServerError  %+v", 500, o.Payload)
}

func (o *ImageBuildInternalServerError) String() string {
	return fmt.Sprintf("[POST /build][%d] imageBuildInternalServerError  %+v", 500, o.Payload)
}

func (o *ImageBuildInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ImageBuildInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
