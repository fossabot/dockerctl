// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/go-swagger/dockerctl/models"
)

// ConfigDeleteReader is a Reader for the ConfigDelete structure.
type ConfigDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConfigDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewConfigDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewConfigDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewConfigDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewConfigDeleteServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewConfigDeleteNoContent creates a ConfigDeleteNoContent with default headers values
func NewConfigDeleteNoContent() *ConfigDeleteNoContent {
	return &ConfigDeleteNoContent{}
}

/* ConfigDeleteNoContent describes a response with status code 204, with default header values.

no error
*/
type ConfigDeleteNoContent struct {
}

// IsSuccess returns true when this config delete no content response has a 2xx status code
func (o *ConfigDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this config delete no content response has a 3xx status code
func (o *ConfigDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this config delete no content response has a 4xx status code
func (o *ConfigDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this config delete no content response has a 5xx status code
func (o *ConfigDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this config delete no content response a status code equal to that given
func (o *ConfigDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *ConfigDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /configs/{id}][%d] configDeleteNoContent ", 204)
}

func (o *ConfigDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /configs/{id}][%d] configDeleteNoContent ", 204)
}

func (o *ConfigDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConfigDeleteNotFound creates a ConfigDeleteNotFound with default headers values
func NewConfigDeleteNotFound() *ConfigDeleteNotFound {
	return &ConfigDeleteNotFound{}
}

/* ConfigDeleteNotFound describes a response with status code 404, with default header values.

config not found
*/
type ConfigDeleteNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this config delete not found response has a 2xx status code
func (o *ConfigDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this config delete not found response has a 3xx status code
func (o *ConfigDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this config delete not found response has a 4xx status code
func (o *ConfigDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this config delete not found response has a 5xx status code
func (o *ConfigDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this config delete not found response a status code equal to that given
func (o *ConfigDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ConfigDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /configs/{id}][%d] configDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ConfigDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /configs/{id}][%d] configDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ConfigDeleteNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConfigDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigDeleteInternalServerError creates a ConfigDeleteInternalServerError with default headers values
func NewConfigDeleteInternalServerError() *ConfigDeleteInternalServerError {
	return &ConfigDeleteInternalServerError{}
}

/* ConfigDeleteInternalServerError describes a response with status code 500, with default header values.

server error
*/
type ConfigDeleteInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this config delete internal server error response has a 2xx status code
func (o *ConfigDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this config delete internal server error response has a 3xx status code
func (o *ConfigDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this config delete internal server error response has a 4xx status code
func (o *ConfigDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this config delete internal server error response has a 5xx status code
func (o *ConfigDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this config delete internal server error response a status code equal to that given
func (o *ConfigDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ConfigDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /configs/{id}][%d] configDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *ConfigDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /configs/{id}][%d] configDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *ConfigDeleteInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConfigDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigDeleteServiceUnavailable creates a ConfigDeleteServiceUnavailable with default headers values
func NewConfigDeleteServiceUnavailable() *ConfigDeleteServiceUnavailable {
	return &ConfigDeleteServiceUnavailable{}
}

/* ConfigDeleteServiceUnavailable describes a response with status code 503, with default header values.

node is not part of a swarm
*/
type ConfigDeleteServiceUnavailable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this config delete service unavailable response has a 2xx status code
func (o *ConfigDeleteServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this config delete service unavailable response has a 3xx status code
func (o *ConfigDeleteServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this config delete service unavailable response has a 4xx status code
func (o *ConfigDeleteServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this config delete service unavailable response has a 5xx status code
func (o *ConfigDeleteServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this config delete service unavailable response a status code equal to that given
func (o *ConfigDeleteServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *ConfigDeleteServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /configs/{id}][%d] configDeleteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ConfigDeleteServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /configs/{id}][%d] configDeleteServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ConfigDeleteServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConfigDeleteServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
