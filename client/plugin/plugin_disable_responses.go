// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/go-swagger/dockerctl/models"
)

// PluginDisableReader is a Reader for the PluginDisable structure.
type PluginDisableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PluginDisableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPluginDisableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPluginDisableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPluginDisableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPluginDisableOK creates a PluginDisableOK with default headers values
func NewPluginDisableOK() *PluginDisableOK {
	return &PluginDisableOK{}
}

/* PluginDisableOK describes a response with status code 200, with default header values.

no error
*/
type PluginDisableOK struct {
}

// IsSuccess returns true when this plugin disable o k response has a 2xx status code
func (o *PluginDisableOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this plugin disable o k response has a 3xx status code
func (o *PluginDisableOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this plugin disable o k response has a 4xx status code
func (o *PluginDisableOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this plugin disable o k response has a 5xx status code
func (o *PluginDisableOK) IsServerError() bool {
	return false
}

// IsCode returns true when this plugin disable o k response a status code equal to that given
func (o *PluginDisableOK) IsCode(code int) bool {
	return code == 200
}

func (o *PluginDisableOK) Error() string {
	return fmt.Sprintf("[POST /plugins/{name}/disable][%d] pluginDisableOK ", 200)
}

func (o *PluginDisableOK) String() string {
	return fmt.Sprintf("[POST /plugins/{name}/disable][%d] pluginDisableOK ", 200)
}

func (o *PluginDisableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPluginDisableNotFound creates a PluginDisableNotFound with default headers values
func NewPluginDisableNotFound() *PluginDisableNotFound {
	return &PluginDisableNotFound{}
}

/* PluginDisableNotFound describes a response with status code 404, with default header values.

plugin is not installed
*/
type PluginDisableNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this plugin disable not found response has a 2xx status code
func (o *PluginDisableNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this plugin disable not found response has a 3xx status code
func (o *PluginDisableNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this plugin disable not found response has a 4xx status code
func (o *PluginDisableNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this plugin disable not found response has a 5xx status code
func (o *PluginDisableNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this plugin disable not found response a status code equal to that given
func (o *PluginDisableNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PluginDisableNotFound) Error() string {
	return fmt.Sprintf("[POST /plugins/{name}/disable][%d] pluginDisableNotFound  %+v", 404, o.Payload)
}

func (o *PluginDisableNotFound) String() string {
	return fmt.Sprintf("[POST /plugins/{name}/disable][%d] pluginDisableNotFound  %+v", 404, o.Payload)
}

func (o *PluginDisableNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PluginDisableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPluginDisableInternalServerError creates a PluginDisableInternalServerError with default headers values
func NewPluginDisableInternalServerError() *PluginDisableInternalServerError {
	return &PluginDisableInternalServerError{}
}

/* PluginDisableInternalServerError describes a response with status code 500, with default header values.

server error
*/
type PluginDisableInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this plugin disable internal server error response has a 2xx status code
func (o *PluginDisableInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this plugin disable internal server error response has a 3xx status code
func (o *PluginDisableInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this plugin disable internal server error response has a 4xx status code
func (o *PluginDisableInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this plugin disable internal server error response has a 5xx status code
func (o *PluginDisableInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this plugin disable internal server error response a status code equal to that given
func (o *PluginDisableInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PluginDisableInternalServerError) Error() string {
	return fmt.Sprintf("[POST /plugins/{name}/disable][%d] pluginDisableInternalServerError  %+v", 500, o.Payload)
}

func (o *PluginDisableInternalServerError) String() string {
	return fmt.Sprintf("[POST /plugins/{name}/disable][%d] pluginDisableInternalServerError  %+v", 500, o.Payload)
}

func (o *PluginDisableInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PluginDisableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
