// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/go-swagger/dockerctl/models"
)

// SecretUpdateReader is a Reader for the SecretUpdate structure.
type SecretUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecretUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSecretUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecretUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewSecretUpdateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSecretUpdateOK creates a SecretUpdateOK with default headers values
func NewSecretUpdateOK() *SecretUpdateOK {
	return &SecretUpdateOK{}
}

/* SecretUpdateOK describes a response with status code 200, with default header values.

no error
*/
type SecretUpdateOK struct {
}

// IsSuccess returns true when this secret update o k response has a 2xx status code
func (o *SecretUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this secret update o k response has a 3xx status code
func (o *SecretUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret update o k response has a 4xx status code
func (o *SecretUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this secret update o k response has a 5xx status code
func (o *SecretUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this secret update o k response a status code equal to that given
func (o *SecretUpdateOK) IsCode(code int) bool {
	return code == 200
}

func (o *SecretUpdateOK) Error() string {
	return fmt.Sprintf("[POST /secrets/{id}/update][%d] secretUpdateOK ", 200)
}

func (o *SecretUpdateOK) String() string {
	return fmt.Sprintf("[POST /secrets/{id}/update][%d] secretUpdateOK ", 200)
}

func (o *SecretUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSecretUpdateBadRequest creates a SecretUpdateBadRequest with default headers values
func NewSecretUpdateBadRequest() *SecretUpdateBadRequest {
	return &SecretUpdateBadRequest{}
}

/* SecretUpdateBadRequest describes a response with status code 400, with default header values.

bad parameter
*/
type SecretUpdateBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this secret update bad request response has a 2xx status code
func (o *SecretUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret update bad request response has a 3xx status code
func (o *SecretUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret update bad request response has a 4xx status code
func (o *SecretUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this secret update bad request response has a 5xx status code
func (o *SecretUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this secret update bad request response a status code equal to that given
func (o *SecretUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SecretUpdateBadRequest) Error() string {
	return fmt.Sprintf("[POST /secrets/{id}/update][%d] secretUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *SecretUpdateBadRequest) String() string {
	return fmt.Sprintf("[POST /secrets/{id}/update][%d] secretUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *SecretUpdateBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SecretUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretUpdateNotFound creates a SecretUpdateNotFound with default headers values
func NewSecretUpdateNotFound() *SecretUpdateNotFound {
	return &SecretUpdateNotFound{}
}

/* SecretUpdateNotFound describes a response with status code 404, with default header values.

no such secret
*/
type SecretUpdateNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this secret update not found response has a 2xx status code
func (o *SecretUpdateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret update not found response has a 3xx status code
func (o *SecretUpdateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret update not found response has a 4xx status code
func (o *SecretUpdateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this secret update not found response has a 5xx status code
func (o *SecretUpdateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this secret update not found response a status code equal to that given
func (o *SecretUpdateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SecretUpdateNotFound) Error() string {
	return fmt.Sprintf("[POST /secrets/{id}/update][%d] secretUpdateNotFound  %+v", 404, o.Payload)
}

func (o *SecretUpdateNotFound) String() string {
	return fmt.Sprintf("[POST /secrets/{id}/update][%d] secretUpdateNotFound  %+v", 404, o.Payload)
}

func (o *SecretUpdateNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SecretUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretUpdateInternalServerError creates a SecretUpdateInternalServerError with default headers values
func NewSecretUpdateInternalServerError() *SecretUpdateInternalServerError {
	return &SecretUpdateInternalServerError{}
}

/* SecretUpdateInternalServerError describes a response with status code 500, with default header values.

server error
*/
type SecretUpdateInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this secret update internal server error response has a 2xx status code
func (o *SecretUpdateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret update internal server error response has a 3xx status code
func (o *SecretUpdateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret update internal server error response has a 4xx status code
func (o *SecretUpdateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this secret update internal server error response has a 5xx status code
func (o *SecretUpdateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this secret update internal server error response a status code equal to that given
func (o *SecretUpdateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SecretUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /secrets/{id}/update][%d] secretUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretUpdateInternalServerError) String() string {
	return fmt.Sprintf("[POST /secrets/{id}/update][%d] secretUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretUpdateInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SecretUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretUpdateServiceUnavailable creates a SecretUpdateServiceUnavailable with default headers values
func NewSecretUpdateServiceUnavailable() *SecretUpdateServiceUnavailable {
	return &SecretUpdateServiceUnavailable{}
}

/* SecretUpdateServiceUnavailable describes a response with status code 503, with default header values.

node is not part of a swarm
*/
type SecretUpdateServiceUnavailable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this secret update service unavailable response has a 2xx status code
func (o *SecretUpdateServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret update service unavailable response has a 3xx status code
func (o *SecretUpdateServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret update service unavailable response has a 4xx status code
func (o *SecretUpdateServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this secret update service unavailable response has a 5xx status code
func (o *SecretUpdateServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this secret update service unavailable response a status code equal to that given
func (o *SecretUpdateServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *SecretUpdateServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /secrets/{id}/update][%d] secretUpdateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *SecretUpdateServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /secrets/{id}/update][%d] secretUpdateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *SecretUpdateServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SecretUpdateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
